# -*- coding: utf-8 -*-
"""
Created on Tue Aug  6 09:30:52 2019

@author: PPLoveXueer
"""

# =============================================================================
# ## 任务 ##
# 在NBA季后赛中，我们总是安排较强的队伍对战较弱的队伍，例如用排名第1的队伍和第n的队伍对决，这是一个可以让比赛更加有趣的好策略。现在，给你n支队伍，你需要以字符串格式输出它们的最终比赛配对。
# 
# n只队伍以从1到n的正整数格式给出，分别代表它们的初始排名（排名1最强，排名n最弱）。我们用括号（'(', ')'）和逗号（','）来表示匹配对——括号（'(', ')'）表示匹配，逗号（','）来用于分割。 在每一轮的匹配过程中，你都需要遵循将强队与弱队配对的原则。
# 
# ##关键思路 ##
# 
# 循环调用匹配规则  
#  
#      第一个和最后一个匹配  
#      匹配返回  '(' + team[i] +',' + team[n-1-i] +')'
# =============================================================================


class Solution:
    def findContestMatch(self, n) :
        team = [str(i) for i in range(1, n + 1)]

        def pair(n):
            if n <= 1:
                return
            for i in range(n//2):
                team[i] = '(' + team[i] +',' + team[n-1-i] +')'
            pair(n//2)
            return team[0]

        return pair(n)
  
