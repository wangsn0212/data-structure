## 任务 ##
LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)...他随机从中抽出了5张牌,想测测自己的手气,看看能不能抽到顺子,如果抽到的话,他决定去买体育彩票,嘿嘿！！“红心A,黑桃3,小王,大王,方片5”,“Oh My God!”不是顺子.....LL不高兴了,他想了想,决定大\小 王可以看成任何数字,并且A看作1,J为11,Q为12,K为13。上面的5张牌就可以变成“1,2,3,4,5”(大小王分别看作2和4),“So Lucky!”。LL决定去买体育彩票啦。 现在,要求你使用这幅牌模拟上面的过程,然后告诉我们LL的运气如何， 如果牌能组成顺子就输出true，否则就输出false。为了方便起见,你可以认为大小王是0。

##关键思路##
**1.列举True的可能**   
牌从小到大排序后，
相邻差值为1时，为True  
一张 王（0） 时， 相邻差值为{1,2}，且最多有一个2时，为True  
两张 王（0） 时， 相邻差值为{1,2}，或{2}时（3张牌最多2个2），为True  
三张 王（0） 时， 1<相邻差值<5时,为True  
四张 王（0） 时， 为True  
其他可能为False

**2 排除法**  
1、如果输入为空，返回false  
2、除了王的任何某个特定数值的牌出现两张或者更多，那么一定凑不齐顺子。  
思路，先统计王的数量，再把牌排序，如果后面一个数比前面一个数大于1以上，那么中间的差值就必须用王来补了。看王的数量够不够，如果够就返回true，否则返回false。




##关键函数##

list.sort()，**没有返回值**，直接排序  

list.set(), **返回集合{}**

list.remove(val), 删除元素，该方法没有返回值但是会移除列表中的某个值的**第一个匹配项**

**enumerate() 函数**  


- 描述  
enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。

Python 2.3. 以上版本可用，2.6 添加 start 参数。



- 语法  
以下是 enumerate() 方法的语法:  
enumerate(sequence, [start=0])  


- 参数  
sequence -- 一个序列、迭代器或其他支持迭代对象。  
start -- 下标起始位置。  
返回值  
返回 enumerate(枚举) 对象。  



- 实例
以下展示了使用 enumerate() 方法的实例：

>seasons = ['Spring', 'Summer', 'Fall', 'Winter']  
>list(enumerate(seasons))  

    [(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')]
> list(enumerate(seasons, start=1))       # 下标从 1 开始  


    [(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]
