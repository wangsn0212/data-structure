## 任务 ##
输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。


## 关键思路 ##

python int型数，32位   

把这个数逐次 **右移**（>>） 然后和1 **与** (&),  
就得到**最低位**的情况,其他位都为0,（1 相当于00000001）  
如果最低位是0和1与 之后依旧 是0，如果是1，与之后还是1。  

对于32位的整数 这样移动32次 ，将相与的结果求和，就记录了这个数二进制中1的个数了

## 关键词         
a = 0011 1100

b = 0000 1101  

**运算符 	   描述	            实例**
> &	  按位与运算符：  
> 参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0	(a & b) 输出结果 12 ，二进制解释： 0000 1100  
> 
|	按位或运算符：  
只要对应的二个二进位有一个为1时，结果位就为1。	(a | b) 输出结果 61 ，二进制解释： 0011 1101

>^	按位异或运算符：  
>当两对应的二进位相异时，结果为1	(a ^ b) 输出结果 49 ，二进制解释： 0011 0001  
>
~	按位取反运算符：  
对数据的每个二进制位取反,即把1变为0,把0变为1 。~x 类似于 -x-1	(~a ) 输出结果 -61 ，二进制解释： 1100 0011，在一个有符号二进制数的补码形式。  

    <<	左移动运算符：  
    运算数的各二进位全部左移若干位，由 << 右边的数字指定了移动的位数，高位丢弃，低位补0。	
    a << 2 输出结果 240 ，二进制解释： 1111 0000  

    >>	右移动运算符：  
    把">>"左边的运算数的各二进位全部右移若干位，>> 右边的数字指定了移动的位数	
    a >> 2 输出结果 15 ，二进制解释： 0000 111》
